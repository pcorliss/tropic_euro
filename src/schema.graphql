type Action {
    key: ID!
}

type Building {
    name: ID!
    description: String
}

type GameState {
    id: ID!
    json: String
    actionCounter: Int
    roundCounter: Int
    buildings: [Building]
    availableActions(playerId: String): [Action]

    quarries: Int
    colonists: Int
    colonyShip: Int
    victoryPoints: Int

    # lastChange: Int - "Int cannot represent non 32-bit signed integer value: 1656194269745"

    # visiblePlantations: [Plantation]

    # ships: [Ship]

    # availableRoles: [Role]
    # currentRole: Role

    # players: [Player]
    # governor: Player
    # currentPlayer: Player
    # currentTurnPlayer: Player

    # tradingHouse: [Good]

    # goods: [???]

}

type Query {
    hello: String
    gameState(id: String): GameState
}

type Mutation {
   createGame(players: [String]): GameState
   applyAction(gs: String, player: String, key: String): GameState
}